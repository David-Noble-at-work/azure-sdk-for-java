<!--
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.azure</groupId>
    <artifactId>azure-client-sdk-parent</artifactId>
    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->
    <relativePath>../../../pom.client.xml</relativePath>
  </parent>

  <artifactId>azure-cosmos-serialization</artifactId>
  <version>4.0.1-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->
  <name>Microsoft Azure SDK for Azure Cosmos DB data serialization</name>
  <description>This package provides core data serialization functionality to the Azure Cosmos DB SQL API</description>
  <packaging>jar</packaging>
  <url>https://github.com/Azure/azure-sdk-for-java</url>

  <distributionManagement>
    <site>
      <id>azure-java-build-docs</id>
      <url>${site.url}/site/${project.artifactId}</url>
    </site>
  </distributionManagement>

  <scm>
    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>
    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>
    <tag>HEAD</tag>
  </scm>

  <!-- CosmosSkip - Needed temporary values to 10% not fail. -->
  <properties>
    <jacoco.min.linecoverage>0.10</jacoco.min.linecoverage>
    <jacoco.min.branchcoverage>0.10</jacoco.min.branchcoverage>
  </properties>

  <repositories>
    <repository>
      <id>azure-sdk-for-java</id>
      <url>https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-java/maven/v1</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencies>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.10.1</version> <!-- {x-version-update;com.fasterxml.jackson.core:jackson-databind;external_dependency} -->
    </dependency>

    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
      <version>2.3.4</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>25.0-jre</version> <!-- {x-version-update;com.google.guava:guava;external_dependency} -->
    </dependency>

    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
      <version>4.1.45.Final</version> <!-- {x-version-update;cosmos_io.netty:netty-buffer;external_dependency} -->
    </dependency>

    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>8.3.1</version> <!-- {x-version-update;it.unimi.dsi:fastutil;external_dependency} -->
    </dependency>

    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>19.0.0</version> <!-- {x-version-update;org.jetbrains:annotations;external_dependency} -->
    </dependency>


    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-api;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-core;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.13.0</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-slf4j-impl;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.10.19</version> <!-- {x-version-update;cosmos_org.mockito:mockito-core;external_dependency} -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.28</version> <!-- {x-version-update;org.slf4j:slf4j-api;external_dependency} -->
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.14.3</version> <!-- {x-version-update;org.testng:testng;external_dependency} -->
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <groups>unit</groups>
            <includes>
              <include>%regex[.*]</include>
            </includes>
            <properties>
              <property>
                <name>surefire.testng.verbose</name>
                <value>2</value>
              </property>
            </properties>
            <systemPropertyVariables>
              <propertName>azure.cosmos.basedir</propertName>
              <azure.cosmos.basedir>${project.basedir}</azure.cosmos.basedir>
            </systemPropertyVariables>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!--  CosmosSkip - Needed temporary to not fail on warning on compilation -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
<!--
          <compilerArgs>
            <arg>&#45;&#45;addExports java.base/jdk.internal.misc=ALL-UNNAMED</arg>
            <arg>-Xlint:all,-options,-path</arg>
          </compilerArgs>
-->
          <failOnWarning>false</failOnWarning>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>${project.basedir}/schemas</directory>
        <includes>
          <include>SystemSchema.json</include>
        </includes>
      </resource>
    </resources>
  </build>

  <modules/>

</project>
